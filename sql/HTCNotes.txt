Note table_to_table {
  '''  **[HTC_History_Chgs_T010] => NULL;
  **[HTC_VersionTracking_T010] => NULL;
  **[HTC_VT_T000 Change History Title] => NULL;
  **[HTC_VT_T000 Change History Title Copy] => NULL;
  **[HTC_VT_T010 Change History] => NULL;
  **[HTC000 WhosLoggedIn] => NULL;
  **[HTC000_G000_T000 Look For Values] => NULL;
  **[HTC000_G000_T010 Servers] => NULL;
  **[HTC000_G010_T010 Company Info] => [
    company:
      CoID => id
      CoName => company_name
      CoActive => is_active
      CoSCAC => scac
      CoTaxID => employer_identification_no
      CoWebPage => website
      CoTSACompliant => is_tsa_compliant
      CoAirportCode => airport_code
      CoCartageAgentType => cartage_agent_type
      CoLogo => logo_path
      !insertAddress(
        addressLine1 = CoMailAddrLn1, 
        addressLine2 = CoMailAddrLn2, 
        city = CoMailCity,
        postalCode = CoMailZip,
        region = (isoCode, CoMailState),
        country = (None, CoMailCountry)
      ) => address_id
      !insertPhone(
        countryCode = 1,
        areaCode = getAreaCode(CoOfcrPhone)
        phoneNumber = getPhoneNumber(CoOfcrPhone),
        extension = CoOfcrExtension
      ) => phone_id
      !insertFax(
        countryCode = 1,
        areaCode = getAreaCode(CoFax)
        phoneNumber = getPhoneNumber(CoFax),
        extension = ''
      ) => fax_id
    CoOfrcEmail => email
    CoNotes => notes
  ];
  **[HTC000_G025_T010 Positions] => [
    position:
      Posn_ID => id
      Posn_BrID => branch_id
      Posn_Title => title
      Posn_SecurityLevel => position_name
      Posn_Status => is_active
  ];
  **[HTC000_G030_T010 Staff Found] => NULL;
  **[HTC000_G090_T010 Staff] => [
    user:
      Staff_BrID => branch_id
      Staff_EmpId => id
      Staff_Login => username
      Staff_NamePrefix => name_prefix
      Staff_FirstName => first_name
      Staff_LastName => last_name
      Staff_NameSuffix => name_suffix
      Staff_Email => email
      !insertPhone(
        countryCode = 1,
        areaCode = getAreaCode(Staff_Phone),
        phoneNumber = getPhoneNUmber(Staff_Phone),
        extension = ''
      ) => phone_main_id
      !insertPhone(
        countryCode = 1,
        areaCode = getAreaCode(Staff_Mobile),
        phoneNumber = getPhoneNUmber(Staff_Mobile),
        extension = ''
      ) => phone_mobile_id
      Staff_TSA_Type => tsa_type
      Staff_TSA_Number => tsa_number
      Staff_TSA_Taken => tsa_taken
      Staff_PC_LID => NULL
      Staff_RoleId => position_id
      Staff_CommRate => commission_rate
      !insertAddress(
        addressLine1 = Staff_Home_Street1,
        addressLine2 = Staff_Home_Street2,
        city = Staff_Home_City,
        postalCode = Staff_Home_Zip,
        region = (isoCode, Staff_Home_StAbbr),
        country = (isoCode3, Staff_Home_Country)
      ) => address_id
    !insertPhone(
      countryCode = 1,
      areaCode = getAreaCode(Staff_Home_Phone),
      phoneNumber = getPhoneNUmber(Staff_Home_Phone),
      extension = ''
    ) => phone_home_id
    Staff_DateOfHire => date_hired
    Staff_DateOfTermination => date_terminated
    Staff_Password => password_hash, password_salt
    Staff_SecCoord => is_security_coordinator
    Staff_TSATrainer => is_tsa_trainer
    Staff_DefaultDocOwner => is_default_doc_owner
    Staff_Active => is_active
  ];
  **[HTC010_G000_T000 All State Abbrev] => NULL;
  **[HTC010_G000_T000 Canadian Provinces to include] => NULL;
  **[HTC010_G000_T000 OrderType Values] => [
    order_type:
      OrdType_ID => id
      OrdType_Title => order_type
  ];
  **[HTC010_G000_T000 US Zip Codes] => [
    city_postal_code:
      !insertCity(
        cityName = City,
        regionName = State,
        country = US
      ) => city_id
      !insertPostalCode(
        postalCode = Zipcode,
        regionName = State
      ) => postal_code_id
      getLatLngCityPostalCode(City, Zipcode) => lat, lng
  ];
  **[HTC010_G010_T010 ACI_Data] => NULL;
  [HTC010_G100_T010 CertificationTestCatalog] => [
    certification_test:
      TestID => id
      TestTitle => certification_name
      TestStatus => is_active
      TestTrainerID => certification_test_trainer_id
      TestTrainer => NULL
      TestStaffCount => NULL
      TestAgentCount => NULL
  ];
  **[HTC200_01 Date Range Selected] => NULL;
  **[HTC200_01_G010_T010 Selected Customers] => NULL;
  **[HTC200_01_G020_T010 AnalysisByMonth] => NULL;
  **[HTC200_01_G020_T020 TYLY Report Lines] => NULL;
  **[HTC200_01_G040_T210 Selected Orders] => NULL;
  **[HTC200_10_T035B Drivers On Report] => NULL;
  **[HTC200_G000_T000 NamePrefixes] => NULL;
  **[HTC200_G000_T000 NameSuffixes] => NULL;
  **[HTC200_G000_T000 OTP] => NULL;
  **[HTC200_G000_T000 ThisCoBr] => NULL;
  **[HTC200_G000_T000 ZipcodeWorkTable] => NULL;
  **[HTC200_G001_T020F New ACI Rows] => NULL;
  **[HTC200_G001_T020I New Assessorial Rows] => NULL;
  **[HTC200_G030_T110 Temp Header] => NULL;
  **[HTC200_G030_T110_11 Add Order To Manifest] => NULL;
  **[HTC200_G030_T120 One Orders Details] => NULL;
  **[HTC200_G030_T120A One Orders Assessorials] => NULL;
  **[HTC200_G030_T120B One Orders Dims] => NULL;
  **[HTC200_G030_T120C One Orders Drivers] => NULL;
  **[HTC200_G030_T120D One Orders Attachments] => NULL;
  **[HTC200_G030_T120D_temp Orders Update History] => NULL;
  **[HTC200_G030_T120P One Orders Details] => NULL;
  **[HTC200_G030_T120PA One Orders Assessorials] => NULL;
  **[HTC200_G030_T120PB One Orders Dims] => NULL;
  **[HTC200_G030_T120PC One Orders Drivers] => NULL;
  **[HTC200_G030_T120PC_temp One Orders Drivers] => NULL;
  **[HTC200_G030_T120R Agent ID on last report] => NULL;
  **[HTC200_G030_T120X One Order Vitals] => NULL;
  **[HTC200_G030_T125 This Orders History] => NULL;
  **[HTC200_G030_T130 CreateSameAsInfo] => NULL;
  **[HTC200_G030_T132 Branch List] => NULL;
  **[HTC200_G030_T210E This Orders Drivers] => NULL;
  **[HTC200_G040_T210 Selected Orders] => NULL;
  **[HTC200_G040_T210 Selected Orders Assessorials] => NULL;
  **[HTC200_G040_T210 Selected Orders Attachments] => NULL;
  **[HTC200_G040_T210 Selected Orders Dims] => NULL;
  **[HTC200_G040_T210 Selected Orders Drivers] => NULL;
  **[HTC200_G040_T300 Selected Orders for Re-sort] => NULL;
  **[HTC200_G040_T300 Selected Orders, Sorted] => NULL;
  **[HTC200_G040_T300_00 RouteAdditions] => NULL;
  **[HTC200_G050_T010 Local Assessorials] => NULL;
  **[HTC200_G060_T000 ACI Target City] => NULL;
  **[HTC200_G060_T010 Similar addresses] => NULL;
  **[HTC200_G060_T010_00 Pkup_Dlvr Addresses] => NULL;
  **[HTC200_G060_T013 For Address Row Number] => NULL;
  **[HTC200_G060_T040 This Address Accessorials] => NULL;
  **[HTC200_G060_T040A1 Pickup Delivery Company List] => NULL;
  **[HTC200_G060_T040A2x Associated Locations] => NULL;
  **[HTC200_G060_T050 This Locn Chg History] => NULL;
  **[HTC200_G060_T060 Addresses Rpt Work Table] => NULL;
  **[HTC200_G070_T010 Rates Work Table] => NULL;
  **[HTC200_G080_T040x Test for empty table] => NULL;
  **[HTC200_G090_T010 One Staff Member] => NULL;
  **[HTC200_G090_T010A Current Co and Branch] => NULL;
  **[HTC200_G090_T020 Selected Staff Change History] => NULL;
  **[HTC200_G150_T010 Order To Retrieve from Archive] => NULL;
  **[HTC200_G200_T020 Order List of Attachments] => NULL;
  **[HTC200_G275_T000 NewCoBr] => NULL;
  **[HTC200_G890_T010 Query Parameters] => NULL;
  **[HTC200_G900_T000 Change History Title] => NULL;
  **[HTC200_G900_T010 Change History] => NULL;
  **[HTC200_G910_T010 Check m_Charges Against Assessorials] => NULL;
  **[HTC200_G911_T010 Check m_Charges Against Assessorials] => NULL;
  **[HTC200A_G000_T000 ThisCoBr] => NULL;
  **[HTC200E_G010_T010 List of Selected Documents] => NULL;
  **[HTC200E_G010_T030 Slctd Blank Forms] => NULL;
  **[HTC200E_G070_T010 Completed Documents] => NULL;
  **[HTC200G G070_T015 B4 Rate Changes] => NULL;
  **[HTC200R_LatLngData] => NULL;
  [HTC200R_RouteStopData] => NULL;
  **[HTC220_G010_T010 To Invoiced] => NULL;
  **[HTC220_G010_T020 To Remaining] => NULL;
  **[HTC220_G990_T000 Change History] => NULL;
  **[HTC250_G020_T010 Order Attachment Size] => NULL;
  **[HTC250_G050_T010 CustomersToInvoice] => NULL;
  **[HTC250_G050_T015 All Customers Orders] => NULL;
  **[HTC250_G050_T020 This Customers Orders] => NULL;
  **[HTC250_G050_T050 List of All QB Customers] => NULL;
  **[HTC250_G050_T052 New Customer Info] => NULL;
  **[HTC250_G050_T052b New Customers ListID] => NULL;
  **[HTC250_G060_T010 Invoice Lines] => NULL;
  **[HTC250_G060_T020 Invoice Header] => NULL;
  **[HTC250_G100_Q030b QBInvoiceLines] => NULL;
  **[HTC250_G100_T030a QBCustomers] => NULL;
  **[HTC250_G100_T030b QBInvoiceLines] => NULL;
  **[HTC250_G100_T030c QBInvoices] => NULL;
  **[HTC250_G100_T040 TCIs] => NULL;
  **[HTC250_G200_T010 Invoice Catchup Log] => NULL;
  **[HTC300_G000_T000 Archive Update History] => [
    archive_history:
      ArcCnt_Date => date_archived
      ArcCnt_When => when_archived
      ArcCnt_OpnOrd => open_orders
      ArcCnt_OpnAss => open_order_assessorials
      ArcCnt_OpnDim => open_order_dimensions
      ArcCnt_OpnDvr => open_order_drivers
      ArcCnt_OpnAtt => open_order_attachments
      ArcCnt_InvOrd => invoiced_orders
      ArcCnt_InvAss => invoiced_order_assessorials
      ArcCnt_InvDim => invoiced_order_dimensions
      ArcCnt_InvDvr => invoiced_order_drivers
      ArcCnt_InvAtt => invoiced_order_attachments
      ArcCnt_RemOrd => remaining_orders
      ArcCnt_RemAss => remaining_order_assessorials
      ArcCnt_RemDim => remaining_order_dimensions
      ArcCnt_RemDvr => remaining_order_drivers
      ArcCnt_RemAtt => remaining_order_attachments
      ArcCnt_DckOrd => dock_orders
      ArcCnt_DckAss => dock_order_assessorials
      ArcCnt_DckDim => dock_order_dimensions
      ArcCnt_DckDvr => dock_order_drivers
      ArcCnt_DckAtt => dock_order_attachments
      ArcCnt_SvcOrd => service_orders
      ArcCnt_SvcAss => service_order_assessorials
      ArcCnt_SvcDim => service_order_dimensions
      ArcCnt_SvcDvr => service_order_drivers
      ArcCnt_SvcATT => service_order_attachments
      ArcCnt_ActiveHist => active_order_history
      ArcCnt_ActiveHAWB => active_order_hawbs
      ArcCnt_ArcOrd => archived_orders
      ArcCnt_ArcAss => archived_order_assessorials
      ArcCnt_ArcDim => archived_order_dimensions
      ArcCnt_ArcDvr => archived_order_drivers
      ArcCnt_ArcATT => archived_order_attachments
      ArcCnt_AchiveHist => archived_order_history
      ArcCnt_ArchiveHAWB => archived_order_hawbs
      ArcCnt_RmvdOrders => removed_orders
      ArcCnt_RmvdAss => removed_order_assessorials
      ArcCnt_RmvdDims => removed_order_dimensions
      ArcCnt_RmvdDvrs => removed_order_drivers
      ArcCnt_RmvdAtts => removed_order_attachments
      ArcCnt_RmvdHist => removed_order_history
      ArcCnt_RmvdHAWB => removed_order_hawbs
  ];
  **[HTC300_G000_T000 Error Log] => NULL;
  **[HTC300_G000_T000 Holidays] => [
    holiday:
      [NEW ID] => id
      HolidayName => holiday_name
      HolidayDate => holiday_date
  ];
  **[HTC300_G000_T000 Last QB RefNumber Assigned] => NULL;
  **[HTC300_G000_T000 Over Night Update History] => [    
    overnight_maintenance_history:
      ONDate => date_overnight_maintenance
      getUserIDFromUsername(ONUser) => user_id
      ONOpenOIn => open_orders_in
      ONOpenAIn => open_order_assessorials_in
      ONOpenDIn => open_order_dimensions_in
      ONOpenDvIn => open_order_drivers_in
      ONOpenAtIn => open_order_attachments_in
      ONInvOIn => invoiced_orders_in
      ONInvAIn => invoiced_order_assessorials_in
      ONInvDIn => invoiced_order_dimensions_in
      ONInvDvIn => invoiced_order_drivers_in
      ONInvAtIn => invoiced_order_attachments_in
      ONRemOIn => remaining_orders_in
      ONRemAIn => remaining_order_assessorials_in
      ONRemDIn => remaining_order_dimensions_in
      ONRemDvIn => remaining_order_drivers_in
      ONRemAtIn => remaining_order_attachments_in
      ONOpenOOut => open_orders_out
      ONOpenAOut => open_order_assessorials_out
      ONOpenDOut => open_order_dimensions_out
      ONOpenDvOut => open_order_drivers_out
      ONOpenAtOut => open_order_attachments_out
      ONInvOOut => invoiced_orders_out
      ONInvAOut => invoiced_order_assessorials_out
      ONInvDOut => invoiced_order_dimensions_out
      ONInvDvOut => invoiced_order_drivers_out
      ONInvAtOut => invoiced_order_attachments_out
      ONRemOOut => remaining_orders_out
      ONRemAOut => remaining_order_assessorials_out
      ONRemDOut => remaining_order_dimensions_out
      ONRemDvOut => remaining_order_drivers_out
      ONRemAtOut => remaining_order_attachments_out
    ];
  **[HTC300_G000_T020 Branch Info] => [
    branch:
      BrCoID => company_id
      BrID => id
      BrName => branch_name
      BrAirportCode => airport_code
      BrActive => is_active
      BrCartageAgentType => cartage_agent_type
      BrFSC => fuel_service_charge
      BRTrnsfrRate => transfer_rate
      BrLowACI => aci_low
      BrHighACI => aci_high
      !insertAddress(
        addressLine1 = BrAddrLn1, 
        addressLine2 = BrAddrLn2, 
        city = BrCity,
        postalCode = BrZip,
        region = (isoCode, BrStateOrProv),
        country = (isoCode3, CoMailCountry)
      ) => address_id
      !insertPhone(
        countryCode = 1,
        areaCode = getAreaCode(BrDispPhone)
        phoneNumber = getPhoneNumber(BrDispPhone),
        extension = BrDispExtension
      ) => phone_id
      !insertFax(
        countryCode = 1,
        areaCode = getAreaCode(BrDispFax)
        phoneNumber = getPhoneNumber(BrDispFax),
        extension = BrDispExtension
      ) => fax_id
      BrDispEmail => email
      BrNotes => notes
      BrDimFIntlAir => international_air_dim_divisor
      BrDimFNatlAir => domestic_air_dim_divisor
      BrDimfTruck => truck_dim_divisor
      BrServerName => NULL
      BrServerType => NULL
      BrDocStorageLocn => NULL
      BrArchiveDocStorageLocn => NULL
      BrScanToLocn => NULL
      QBScanToLocn => NULL
      QBInvoicePrefix => NULL
      BRBlankTestLocn => NULL
      BRCompletedTestLocn => NULL
  ];
  **[HTC300_G000_T030 Co Info Chg History] => [
    company_change_history:
      NULL => NEW id
      CoInfo_Now => date_changed
      CoInfo_LID => user_id
      CoInfo_CoID => company_id
      CoInfo_CoName => NULL
      CoInfo_Chgs => changes
  ];
  **[HTC300_G000_T040 Branch Info Chg History] => [
    branch_change_history:
      NULL => NEW id
      BrInfo_Now => date_changed
      BrInfo_LID => user_id
      BrInfo_BrCoID => NULL
      BrInfo_BrID => NULL
      BrInfo_BrName => NULL
      BrInfo_Chgs => changes
  ];
  **[HTC300_G010_T010 DFW_ACI_Data] => [
    aci_data:
      ACICoID => NULL
      ACIBrID => branch_id
      ID => id
      ACIKey => NULL
      !insertCityPostalCode(
        city = CITY_PLACE
        postalCode = ZIP_CODE
        region = STATE
        country = COUNTRY
      ) => postal_code_id & city_id
      AIRP_CODE => airport_code
      CARRIER => carrier
      AREA => area
      PLUS_ONE => NULL
      RATE_MIN => rate_min
      RATE_100 => rate_100
      RATE_1000 => rate_1000
      RATE_2000 => rate_2000
      RATE_5000 => rate_5000
      CreateDate => date_created
      CreatedBy => created_by
      ChgDate => NULL
      ChgdBy => NULL
      Active => is_active
  ];
  **[HTC300_G010_T020 DFW_ACI_Data Updates] => NULL;
  **[HTC300_G010_T030 ACI Update History] => [
    aci_data_change_history:
      NULL => NEW id
      ACI_UpdtDate => date_changed
      getUserId(ACI_UpdtLID) => user_id
      ACI_UpdtCoid => NULL
      ACI_UpdtBrID => NULL
      ACI_LineNbr => aci_data_id
      ACI_CityPLace => NULL
      ACI_State => NULL
      ACI_ZipCode => NULL
      ACI_Country => NULL
      ACI_Updates => changes
  ];
  **[HTC300_G020_T010 Status Values] => [
    order_status:
      Stat_CoID => NULL
      Stat_BrID => branch_id
      Stat_Seq => id
      Stat_Text => order_status_name
      OnManifest => show_on_manifest
      AutoNotify => is_auto_notify
      Stat_Active => is_active    
  ];
  **[HTC300_G020_T010 Status Values Updates] => NULL
  **[HTC300_G020_T030 Status Update History] => [
    order_status_change_history:
      NULL => NEW id
      STAT_CoID => NULL
      STAT_BrID => NULL
      STAT_UpdtDate => date_changed
      Stat_UpdtLID => NULL
      STAT_Seq => order_status_id
      Stat_Changes => changes 
  ];
  **[HTC300_G025_T025 Positions Change History] => [
    position_change_history:
      NULL => NEW id
      PosnHist_CoID => NULL
      PosnHist_BrID => NULL
      PosnHist_ID => position_id
      PosnHist_Date => date_changes
      !getUserIdFromUsername(PosnHist_ChgdBy) => user_id  
      PosnHist_Changes => changes
  ];
  **[HTC300_G030_T010 Customers] => [
    customer:
      Cus_CoID => NULL
      Cus_BrID => branch_id
      CustomerID => id
      Customer => customer_name
      !insertAddress(
        addressLine1 = Cus_AddrLn1,
        addressLine2 = Cus_AddrLn2,
        city = Cus_City,
        postalCode = Cus_Zip,
        region = (isoCode, Cus_State),
        country = (isoCode3, Cus_Country)
      ) => address_id
      !insertPhone(
        countryCode = 1,
        areaCode = getAreaCode(Cus_Phone)
        phoneNumber = getPhoneNumber(Cus_Phone),
        extension = Cus_Extension
      ) => phone_id
      Cus_Notes => notes
      getIdFromTariff(Cus_Tariff) => default_rate_id
      Cus_FSC => fuel_service_charge
      !createAssessorialLink("customer_default_assessorial", Cus_Assessorials)
      Cus_Remarks => NULL
      Cus_Status => is_active
      Cus_OmitQBInvoice => is_qb_invoice_omitted
      Cus_QBCustomerRefListID => qb_customer_ref_id
      Cus_QBCustomerRefFullName => qb_customer_ref_name
      Cus_DateAdded => NULL
      Cus_DateLastChanges => NULL
  ];
  **[HTC300_G030_T010 Customers Updates] => NULL;
  **[HTC300_G030_T030 Customer Update History] => [
    customer_change_history:
      NULL => NEW id
      Cust_UpdtDate & Cust_UpdtTime => date_changed
      getUserIdFromUsername(Cust_UpdtLID) => user_id
      Cust_CoID => NULL
      Cust_BrID => NULL
      Cust_CustomerID => customer_id
      Cust_FldUpdts => changes
  ];
  **[HTC300_G040_T000 Last OrderNo Assigned] => NULL;
  **[HTC300_G040_T005 Orders In Work] => NULL;
  **(
    [HTC300_G040_T010A Open Orders] &
    [HTC300_G040_T010B Invoiced Orders] &
    [HTC300_G040_T010C Remaining Orders] &
    [HTC300_G040_T010D Dock Orders] &
    [HTC300_G040_T010E Service Orders] &
    [HTC400_G040_T010A Orders]
  ) => [
    order:
      M_CoID => NULL
      M_BrID => branch_id
      M_OrderNo => id
      M_OrderType => order_type_id
      M_CustomerID => customer_id
      M_Customer => NULL
      M_CustAgent, 0 => agent_id
      M_CustAssessorials => NULL
      M_Tariff => rate_id
      M_HAWB => hawb
      M_MAWB => mawb
      M_OrderNotes => order_notes
      M_PUDate & M_PUTimeStart => pu_time_start
      M_PUDate & M_PUTimeEnd => pu_time_end
      M_DelDate & M_DelTimeStart => del_time_start
      M_DelDate & M_DelTimeEnd => del_time_end
      M_PUSpecificYN => NULL
      M_DelSpecficYN => NULL
      M_DeclaredValue => NULL
      M_PUID => pu_address_id
      M_PUCo => pu_location_id
      M_PULocn => NULL
      M_PUZip => NULL
      M_PULatitude => NULL
      M_PULongitude => NULL
      M_PUACI => NULL
      M_PUAssessorials => NULL
      if isPhoneNumber(M_PUContactName):
        M_PUContactName => pu_contact_phone_id
        M_PUContactMeans => pu_contact_name
      else:
        M_PUContactName => pu_contact_name
        M_PUContactMeans => pu_contact_phone_id
      M_PUNotes => pu_notes
      M_PUCarrier => NULL
      M_PUIntlYN => NULL
      M_PULocalYN => NULL
      M_PUBranchYN => NULL
      M_DelID => del_address_id
      M_DelCo => del_location_id
      M_DelLocn => NULL
      M_DelZip => NULL
      M_DelLatitude => NULL
      M_DelLongitude => NULL
      M_DelACI => NULL
      M_DelAssessorials => NULL
      if isPhoneNumber(M_PUContactName):
        M_DelContactName => del_contact_phone_id
        M_DelContactMeans => del_contact_name
      else:
        M_DelContactName => del_contact_name
        M_DelContactMeans => del_contact_phone_id
      M_DelNotes => del_notes
      M_DelCarrier => NULL
      M_DelIntlYN => NULL
      M_DelLocalYN => NULL
      M_DelBranchYN => NULL
      M_Driver => GetIdFromField('user', 'name')
      M_PODSignee => pod_signee
      M_PODDate & M_PODTime => pod_time_signed
      M_PODNotes => pod_notes
      M_Status => NULL
      M_StatSeq => status_id
      M_Rate => rating_weight_charges
      M_FSC => rating_fuel_charges 
      M_Services => rating_service_charges
      M_Charges => rating_total_charges
      M_Costs => rating_total_expenses
      M_StorageCosts => rating_storage_charges
      M_Adjustments => rating_adjustments
      M_RatingNotes => rating_notes
      M_QBCustomer => quickbooks_customer_list_id
      M_QBCustFullName => quickbooks_customer_name
      M_QBInvoiceRefNumber => quickbooks_invoice_reference_number
      M_QBInvoiceLineSeqNo => quickbooks_line_sequence_number
      M_AutoAssessYN => is_auto_assessorials
      M_WgtChgsCalcYN => is_weight_charge_calculated
  ];
  **(
    [HTC300_G040_T011A Open Order Assessorials] &
    [HTC300_G040_T011B Invoiced Order Assessorials] &
    [HTC300_G040_T011C Remaining Order Assessorials] &
    [HTC300_G040_T011D Dock Order Assessorials] &
    [HTC300_G040_T011E Service Order Assessorials] &
    [HTC400_G040_T011A Assessorials]
  ) => [
    order_assessorial:
      OA_COID => NULL
      OA_BrID => NULL
      OA_OrderNo => order_id
      OA_AssNo => NULL
      OA_AssParent => parent_type
      OA_AssID => assessorial_id
      OA_ShipperFee => NULL
      OA_HowMuch => NULL
      OA_AWBValue => NULL
      OA_HowManyCount => NULL
      (OA_MinutesWaitTime &
      OA_HowManyMiles & 
      OA_HowManyHrs
      ) => basis_count
      OA_TotalCharges => total_charge
      OA_HowMuchPerPound => NULL
      OA_Presentation => NULL
      OA_PayCommYN => NULL
  ];
  **(
    [HTC300_G040_T012A Open Order Dims] &
    [HTC300_G040_T012B Invoiced Order Dims] &
    [HTC300_G040_T012C Remaining Order Dims] &
    [HTC300_G040_T012D Dock Order Dims] &
    [HTC300_G040_T012E Service Order Dims] &
    [HTC400_G040_T012A Dims]
  ) => [
    order_dim:
      OD_CoID => NULL
      OD_BrID => NULL
      OD_OrderNo => order_id
      OD_DimID => NULL
      OD_UnitType => unit_type
      OD_UnitQty => unit_quantity
      OD_UnitHeight => dim_height
      OD_UnitLength => dim_length
      OD_UnitWidth => dim_width
      OD_UnitWeight => unit_weight
      OD_UnitDimWeight => dim_weight
  ];
  **(
    [HTC300_G040_T013A Open Order Drivers] &
    [HTC300_G040_T013B Invoiced Order Drivers] & 
    [HTC300_G040_T013C Remaining Order Drivers] &
    [HTC300_G040_T013D Dock Order Drivers] &
    [HTC300_G040_T013E Service Order Drivers] &
    [HTC400_G040_T013A DriversAttachments]
  ) => [
    order_driver:
      ODvr_CoID => NULL
      ODvr_BrID => NULL
      ODvr_OrderNo => order_id
      ODvr_DvrNo => NULL
      ODvr_EmpID => driver_user_id
      ODvr_Name => NULL
      ODvr_Leg => order_leg
      ODvr_Role => driver_role
      ODvr_CommissionDue => NULL
      ODvr_CommPaidDate => NULL
  ];
  **(
    [HTC300_G040_T014A Open Order Attachments] &
    [HTC300_G040_T014B Invoiced Order Attachments] &
    [HTC300_G040_T014C Remaining Order Attachments] & 
    [HTC300_G040_T014D Dock Order Attachments] &
    [HTC300_G040_T014E Service Order Attachments] & 
    [HTC400_G040_T014A Attachments]
  ) => [
    order_attachment:
      Att_CoID => NULL 
      Att_BrID => NULL
      Att_OrderNo => order_id 
      Att_CustID => NULL
      Att_Path => attachment_path
      Att_Size => file_size 
  ];
  **[HTC300_G040_T030 Orders Update History] => [
    order_change_history:
      NULL => NEW id
      Orders_UpdtDate => date_changed
      Orders_UpdtLID => user_id
      Orders_CoID => NULL
      Orders_BrID => NULL
      Orders_OrderNbr => order_id
      Orders_Changes => changes
  ];
  **[HTC300_G040_T040 HAWB Values] => NULL;
  **[HTC300_G050_T010 Accessorials] => [
    if (AccType == "Asrl")
      assessorial:
        AccCoID => NULL
        AccBrID => branch_id
        AccID => id
        AccDesc => assessorial_name
        AccActive => is_active
        AccMinCharge => min_charge
        AccBasis => basis_type
        Acc_Question => user_prompt
        AccValueID => NULL
        AccPortion => basis_portion
        AccTerm => NULL
        AccRate => basis_rate
        Acc_DateAdded => date_created
        Acc_DateLastChanged => NULL 
        Acc_Comments => notes
        Acc_PayCommYN => NULL
    elif (AccType == "SPCL"):
      special:
        NULL => NEW id
        AccCoID => NULL
        AccBrID => branch_id
        AccID => old_id
        !getSpecialValues(AccDesc) => 
          day & area
        AccActive => is_active
        AccMinCharge => NULL
        AccBasis => NULL
        Acc_Question => NULL
        AccValueID => NULL 
        AccPortion => NULL  
        AccTerm => NULL 
        AccRate => amount_charged
        Acc_DateAdded => date_created
        Acc_DateLastChanged => NULL
        Acc_Comments => notes
        Acc_PayCommYN => NULL
  ];
  **[HTC300_G050_T010 Accessorials Updates] => NULL;
  **[HTC300_G050_T030 Accessorials Update History] => [
    if (AccType == "Asrl"):
      assessorial_change_history:
        NULL => NEW id
        Acc_UpdtDate => date_changed
        Acc_UpdtLID => getIdFromUsername(user_id)
        Acc_CoID => NULL
        Acc_BrID => NULL
        Acc_AccID => assessorial_id
        Acc_Changes => changes
    elif (AccType == "SPCL"):
      special_change_history
        NULL => NEW id
        Acc_UpdtDate => date_changed
        Acc_UpdtLID => getIdFromUsername(user_id)
        Acc_CoID => NULL
        Acc_BrID => NULL
        Acc_AccID => special_id
        Acc_Changes => changes
  ];
  **[HTC300_G060_T010 Addresses] => [
    location:
      FavCoID => NULL
      FavBRID => branch_id
      FavID => id
      FavKeyCheck => NULL
      FavKeyCounts => NULL
      FavBranchAddressYN => NULL
      FavCompany => company_name
      FavLocnName => location_name
      !createAddress(
        addressLine1 = FavAddrLn1 
        addressLine2 = FavAddrLn2
        city = FavCity
        state = (FavState, isoCode)
        postalCode = FavZip
        country = (FavCountry, isoCode3)
      ) => address_id
      FavACIListed => NULL
      (FavACIID if FavAciID != 0 else NULL) => aci_id
      FavFirstName => contact_first_name
      FavLastName => contact_last_name
      FavEMail => contact_email
      !insertPhone(
        countryCode = 1,
        areaCode = getAreaCode(FavPhone)
        phoneNumber = getPhoneNumber(FavPhone),
        extension = FavExt
      ) => phone_id
      !createAssessorialLink("default_location_assessorial", FavAssessorials)
      FavCarrierYN => is_carrier
      FavLocalYN => is_local
      FavInternational => is_international 
      FavWaitTimeDefault => default_wait_time
      FavActive => is_active
      FavDateAdded => NULL
      FavAddedBy => NULL
      FavDateModified => NULL 
      FavChgdby => NULL
  ];
  **[HTC300_G060_T010 Addresses Updates] => NULL;
  **[HTC300_G060_T011 FavKeyChrCounts] => NULL;
  **[HTC300_G060_T030 Addresses Update History] => [
    location_change_history:
      NULL => NEW id
      Addr_UpdtDate => date_changed
      Addr_UpdtLID => user_id
      Addr_UpdtCoID => NULL
      Addr_UpdtBrID => NULL
      Addr_ID => address_id
      Addr_Chgs => changes
  ];
  **[HTC300_G070_T010 Rates] => [
    rate_area:
      Item => id
      !createRate(
        branch_id = Rate_BrID
        rate_name = Rate_Tariff
        is_default = Rate_Default 
        is_active = Rate_Active
        date_added = Rate_Added 
        added_by_user_id = getUserIDFromUsername(Rate_AddedBy)
      ) => rate_id
      Rate_Area => area
      RateMinimum => rate_min
      W100 => rate_100
      W1000 => rate_1000
      W2000 => rate_2000
      W5000 => rate_5000
      Rate_Cap => rate_max
  ];
  **[HTC300_G070_T020 Rates Update] => NULL;
  **[HTC300_G070_T030 Rates Update History] => [
    rate_change_history:
      NULL => NEW id
      Rates_UpdtDate => date_changed
      Rates_UpdtLID => user_id
      Rates_CoID => NULL
      Rates_BrID => NULL
      Rates_Key => rate_id
      Rates_Changes => changes
  ];
  **[HTC300_G080_T010 Agents] => [
    agent:
      NULL => NEW ID
      Agent_COID => NULL
      Agent_BrID => branch_id
      Agent_ID => id
      Agent_Login => email
      getCustomerIDFromName(Agent_Customer) => customer_id
      Agent_FirstName => first_name
      Agent_LastName => last_name
      Agent_Email => NULL
      !insertPhone(
        countryCode = 1,
        areaCode = getAreaCode(Agent_ContactPhone)
        phoneNumber = getPhoneNumber(Agent_ContactPhone),
        extension = Agent_Extension
      ) => phone_id
      !insertPhone(
        countryCode = 1,
        areaCode = getAreaCode(Agent_MobilePhone)
        phoneNumber = getPhoneNumber(Agent_MobilePhone),
        extension = Agent_Extension
      ) => mobile_phone_id
      !insertFax(
        countryCode = 1,
        areaCode = getAreaCode(Agent_Fax)
        phoneNumber = getPhoneNumber(Agent_Fax)
      ) => fax_id
      Agent_TSABC_Type => NULL
      Agent_TSABC_Number => NULL
      Agent_Status => is_active
      Agent_SendAutoEmail => is_set_to_auto_notify_email
  ];
  [HTC300_G080_T020 Agent Certifications] => [
    agent_certification:
      NULL => NEW ID
      Agent_Coid => NULL
      Agent_BrID => branch_id
      AgentID => agent_id
      Agent_TestID => certification_test_id
      Agent_TestDate => date_tested
      Agent_TestScore => test_score
      Agent_TestTrainerID => NULL
      Agent_TestStatus => is_active
  ];
  **[HTC300_G080_T030 Agents Change History] => [
    agent_change_history:
      NULL => NEW ID
      Agt_CoID => NULL
      Agt_BrID => NULL
      Agt_CusID => NULL
      Agt_ID => agent_id
      Agt_ChgDate => date_changed
      getIdFromUsername(Agt_ChgbDY) => user_id
      Agt_Changes => changes
  ];
  **[HTC300_G090_T020 Staff Certifications] => NULL;
  **[HTC300_G090_T030 Staff Chg History] => [
    NULL => NEW ID
    StaffCoID => NULL
    StaffBrID => NULL
    StaffID => user_changed_id
    StaffLID => NULL
    StaffChgDate & StaffChgTime => date_changed
    StaffChgBy => user_id
    StaffChgs => changes
  ];
  **[HTC300_G090_T040 Staff Role Values] => NULL;
  [HTC300_G100_T020 Certification Trainers] => [
    certification_test_trainer:
      TSA_TrainerID => id
      TSA_TrainerName => trainer_name
      TSA_Trainer_Status => is_active
      TSA_TrainerUsedByStaff => NULL
      TSA_TrainerUserByAgents => NULL
  ];
  [HTC300_G100_T021 Certifaction Trainer Change History] => [
    certification_trainer_change_history:
      NULL => NEW ID
      STACH_STATrainerID => test_trainer_id
      STACH_ChgdBy => user_id
      STACh_Date => date_changed
      STACH_Changes => changes
  ];
  [HTC300_G100_T030 CertificationTestCatalogChgHistory] => [
    certification_test_change_history:
      NULL => NEW ID
      TestHistID => certification_test_id
      TestHistActivity => changes
      TestActivityDate => date_changed
      TestChgdBy => user_id
  ];
  [HTC300_G101_T010 Certification Tests] => NULL;
  [HTC300_G101_T012 Certification Tests Change History] => NULL;
  [HTC300_G101_T014 Copmleted Tests] => NULL;
  **[HTC300_G200_T010 No Invoice Customers] => NULL;
  **[HTC300_G990_T000 Change Log] => NULL;
  **[HTC300_new_G010_T010 DFW_ACI_Data] => NULL;
  **[HTC300_New_G020_T010 Status Values] => NULL;
  **[HTC300_New_G025_T010 Positions] => NULL;
  **[HTC300_New_G050_T010 Assessorials] => NULL;
  **[HTC300_New_G070_T010 Rates] => NULL;
  **[HTC300_new_G090_T040 Staff Role Values] => NULL;
  **[HTC301_G990_T000 Change Log] => NULL;
  [HTC320_G010_T005 Valid Test Type Names] => [
    valid_certification_test_type:
      VTType_ID => id
      VTType_Title => test_title
      VTType-_Endurance => NULL
      VTType_FormOnly => is_form_only
      VTType_Active => is_active
  ]
  [HTC320_G010_T010 Test Types] => [
    certification_test_type:
      TType_CoID => NULL
      TType_BrID => branch_id
      TType_ID => id
      TType_TypeID => valid_test_type_id
      TType_Type => NULL
      TType_Name => certification_test_name
      TType_Version => version
      TType_Description => description
      TType_Created + 1 year * TType_LifeSpan => date_of_expiration
      TType_DateReqd => is_date_required
      TType_EmpNameReqd => is_name_required
      TType_TrnrReqd => is_trainer_required
      TType_ScoreReqd => is_score_required
      TType_Active => is_active
      TType_Location => file_path

  ];
  **[HTC320_G010_T010H Form Change History] => NULL;
  [HTC320_G020_T020 Completed Docs] => [

  ];
  [HTC320_G020_T020H Completed Docs History] => [

  ];
  **[HTC320_Security Coordinators] => NULL;
  **[HTC320_ThisCoBr] => NULL;
  [HTC350D_G020_T020 NameSwap_ChgHistory] => [

  ];
  **[HTC400_G010_T010 OrdersToArchive] => NULL;
  **[HTC400_G010_T010 Recovered Orders] => NULL;
  [HTC400_G030_T010 Attachments To Relocate] => [

  ];
  **[HTC400_G040_T040 HAWB Values] => NULL;
  **[HTC400_G050_T010 Combined OrdersToArchive] => NULL;
  **[HTC400_G070_T010 MissingFromActive] => NULL;
  **[HTC400_G070_T020 AlreadyInArchive] => NULL;
  **[HTC400_G075_T020A Orders Removed] => NULL;
  **[HTC400_G075_T020B Assessorials Removed] => NULL;
  **[HTC400_G075_T020C Dims Removed] => NULL;
  **[HTC400_G075_T020D Drivers Removed] => NULL;
  **[HTC400_G075_T020E Attachments Removed] => NULL;
  **[HTC400_G075_T020F Order Update History Removed] => NULL;
  **[HTC400_G075_T020G Used HAWBs Removed] => NULL;
  **[HTC400_G900_T010 Archive Event Log] => [
    archive_error_log:
      NULL => NEW id
      Log_DateTime => date_changed
      GetUserIdFromUsername(Log_WhoseLoggedIn) => user_id
      Log_CoID => NULL
      Log_BrId => NULL
      Log_CustID => NULL
      Log_OrderNo => order_id
      Log_Entry => details
  ];
  **[HTC400_G990_T000 Change Log] => NULL;
  **[Name AutoCorrect Save Failures] => NULL;
  **[Paste Errors] => NULL;
  '''
}



Table aci_data {
  id INTEGER [pk, not null, increment]
  city_id INTEGER [
    not null, 
    ref: > city.id
  ]
  postal_code_id INTEGER [
    not null,
    ref: > postal_code.id
  ]
  airport_code NVARHCAR(5) [not null]
  carrier NVARCHAR(50) [default: ""]
  area NVARCHAR(1) [not null]
  rate_min MONEY
  rate_100 MONEY
  rate_1000 MONEY
  rate_2000 MONEY
  rate_5000 MONEY
  date_created DATETIME2
  created_by INTEGER [
    ref: > user.id
  ]
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
  is_active BIT [not null, default: 1]
}

Table aci_data_change_history {
  id INTEGER [pk, not null, increment]
  aci_data_id INTEGER [
    not null,
    ref: > aci_data.id
  ]
  user_id INTEGER [
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table address {
  id INTEGER [pk, not null, increment]
  address_line_1 NVARCHAR(127) [not null]
  address_line_2 NVARCHAR(63)
  city_id INTEGER [
    not null,
    ref: > city.id
  ]
  postal_code_id INTEGER [
    not null,
    ref: > postal_code.id
  ]

  indexes {
    city_id 
  }

  note {
    '''
      This table is entirely new.
        Where noted, take addresses and populate this table with them.
    '''
  }
}

Table agent {
  id INTEGER [pk, not null, increment]
  customer_id INTEGER [
    not null,
    ref: > customer.id
  ]
  email_address NVARCHAR(127) [not null]
  first_name NVARCHAR(50)
  last_name NVARCHAR(50)
  phone_id INTEGER [
    not null,
    ref: > phone.id,
    note: 'Function to convert phone numbers to IDs'
  ]
  mobile_phone_id INTEGER [
    ref: > phone.id
  ]
  fax_id INTEGER [
    ref: > fax.id
  ]
  is_set_to_auto_notify_email BIT [not null, default: 0]
  is_active BIT [not null, default: 1]
}

Table agent_change_history {
  id INTEGER [pk, not null, increment]
  agent_id INTEGER [
    not null,
    ref: > agent.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table archive_error_log {
  id INTEGER [pk, not null, increment]
  order_id INTEGER [
    ref: > order.id
  ]
  archive_date DATETIME2
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  details NTEXT
}

Enum WHENARCHIVED {
  "Before Archive"
  "After Archive"
}
Table archive_history {
  id INTEGER [pk, not null, increment]
  open_orders INTEGER [default: 0]
  open_order_assessorials INTEGER [default: 0]
  open_order_dimensions INTEGER [default: 0]
  open_order_drivers INTEGER [default: 0]
  open_order_attachments INTEGER [default: 0]
  invoiced_orders INTEGER [default: 0]
  invoiced_order_assessorials INTEGER [default: 0]
  invoiced_order_dimensions INTEGER [default: 0]
  invoiced_order_drivers INTEGER [default: 0]
  invoiced_order_attachments INTEGER [default: 0]
  remaining_orders INTEGER [default: 0]
  remaining_order_assessorials INTEGER [default: 0]
  remaining_order_dimensions INTEGER [default: 0]
  remaining_order_drivers INTEGER [default: 0]
  remaining_order_attachments INTEGER [default: 0]
  dock_orders INTEGER [default: 0]
  dock_order_assessorials INTEGER [default: 0]
  dock_order_dimensions INTEGER [default: 0]
  dock_order_drivers INTEGER [default: 0]
  dock_order_attachments INTEGER [default: 0]
  service_orders INTEGER [default: 0]
  service_order_assessorials INTEGER [default: 0]
  service_order_dimensions INTEGER [default: 0]
  service_order_drivers INTEGER [default: 0]
  service_order_attachments INTEGER [default: 0]
  active_order_history INTEGER [default: 0]
  active_order_hawbs INTEGER [default: 0]
  archived_orders INTEGER [default: 0]
  archived_order_assessorials INTEGER [default: 0]
  archived_order_dimensions INTEGER [default: 0]
  archived_order_drivers INTEGER [default: 0]
  archived_order_attachments INTEGER [default: 0]
  archived_order_history INTEGER [default: 0]
  archived_order_hawbs INTEGER [default: 0]
  removed_orders INTEGER [default: 0]
  removed_order_assessorials INTEGER [default: 0]
  removed_order_dimensions INTEGER [default: 0]
  removed_order_drivers INTEGER [default: 0]
  removed_order_attachments INTEGER [default: 0]
  removed_order_history INTEGER [default: 0]
  removed_order_hawbs INTEGER [default: 0]
}

Enum ASSESSORIAL_BASIS_TYPE {
  "fixed"
  "weight"
  "prompt"
}
Table assessorial {
  id INTEGER [pk, not null, increment]
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
  old_id INTEGER
  assessorial_name NVARCHAR(31) [not null]
  min_charge MONEY [not null]
  basis_type ASSESSORIAL_BASIS_TYPE [not null]
  basis_portion FLOAT [not null]
  basis_rate MONEY
  user_prompt NVARCHAR(127)
  date_created DATETIME2 [not null]
  notes NTEXT
  is_active BIT [not null, default: 1]
}

Table assessorial_change_history {
  id INTEGER [pk, not null, increment]
  assessorial_id INTEGER [
    not null,
    ref: > assessorial.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table branch {
  id INTEGER [pk, not null, increment]
  branch_name NVARCHAR(63) [not null]
  company_id INTEGER [
    not null,
    ref: > company.id  
  ]
  address_id INTEGER [
    not null,
    note: 'Create function to turn address of branch into address row'
  ]
  airport_code NVARCHAR(5) [not null]
  email NVARCHAR(127) [not null]
  phone_id INTEGER [
    not null, 
    ref: > phone.id
  ]
  fax_id INTEGER [ref: > fax.id]
  cartage_agent_type NVARCHAR(15) [default: 'cartage', not null]
  fuel_service_charge MONEY [not null]
  transfer_rate MONEY [not null]
  international_air_dim_divisor INTEGER [not null]
  domestic_air_dim_divisor INTEGER [not null]
  truck_dim_divisor INTEGER [not null]
  aci_low NVARCHAR(1) [not null]
  aci_high NVARCHAR(1) [not null]
  notes NTEXT
  is_active BIT [not null]
}

Table branch_change_history {
  id INTEGER [pk, not null, increment]
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}


Table city {
  id INTEGER [pk, not null, increment]
  city_name NVARCHAR(63) [not null]
}

Table city_region {
  id INTEGER [pk, not null, increment]
  city_id INTEGER [
    not null,
    ref: > city.id
  ]
  region_id INTEGER [
    not null,
    ref: > region.id
  ]
}

Table city_postal_code {
  id INTEGER [pk, not null, increment]

  city_id INTEGER [
    not null,
    ref: > city.id
  ]
  postal_code_id INTEGER [
    not null,
    ref: > postal_code.id
  ]
  lat DECIMAL(9,2) [not null]
  lng DECIMAL(9,2) [not null]
}

Table company {
  id INTEGER [pk, not null, increment]
  company_name NVARCHAR(63) [not null]
  address_id INTEGER [
    not null, 
    ref: > address.id
  ]
  phone_id INTEGER [
    not null,
    ref: > phone.id
  ]  
  airport_code NVARCHAR(5)
  fax_id INTEGER [ref: > fax.id]
  cartage_agent_type NVARCHAR(15) [default: 'cartage', not null]
  employer_identification_no NCHAR(10) [
    unique,
    not null
  ]
  email NVARCHAR(255) [unique, not null]
  scac NVARCHAR(5) [unique, not null]
  website NVARCHAR(511)
  notes NTEXT
  logo_path NVARCHAR(MAX)
  is_tsa_compliant BIT [default: 0, not null]
  is_active BIT [default: 1, not null]
}

Table company_change_history {
  id INTEGER [pk, not null, increment]
  company_id INTEGER [
    not null,
    ref: > company.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table country {
  id INTEGER [pk, not null, increment]
  country_name NVARCHAR(63) [unique, not null]
  iso_code_2 NVARCHAR(2) [unique, not null]
  iso_code_3 NVARCHAR(3) [unique, not null]
}

Table customer {
  id INTEGER [pk, not null, increment]
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
  customer_name NVARCHAR(63) [not null]
  address_id INTEGER [
    not null,
    ref: > address.id
  ]
  phone_id INTEGER [
    not null,
    ref: > phone.id
  ]
  default_rate_id INTEGER [
    not null,
    ref: > rate.id
  ]
  fuel_service_charge MONEY [not null]
  qb_customer_ref_id NVARCHAR(127)
  qb_customer_ref_name NVARCHAR(127)
  is_qb_invoice_omitted BIT [not null]
  is_active BIT [not null, default: 1]
  notes NTEXT [not null]
}

Table customer_change_history {
  id INTEGER [pk, not null, increment]
  customer_id INTEGER [
    not null,
    ref: > customer.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table customer_default_assessorial {
  id INTEGER [pk, not null, increment]
  customer_id INTEGER [
    not null,
    ref: > customer.id
  ]
  assessorial_id INTEGER [
    not null,
    ref: > assessorial.id
  ]
}

Table fax {
  id INTEGER [pk, not null, increment]
  country_code NVARCHAR(3) [not null]
  area_code NVARCHAR(5) [not null]
  fax_number NVARCHAR(14) [not null]
  fax_extension NVARCHAR(4)
}

Table holiday {
  id INTEGER [pk, not null, increment]
  holiday_name NVARCHAR(31) [not null]
  holiday_date DATETIME2 [not null]
}

Table location {
  id INTEGER [pk, not null, increment]
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
  company_name NVARCHAR(127)
  location_name NVARCHAR(127)
  address_id INTEGER [
    not null,
    ref: > address.id
  ]
  aci_id INTEGER [
    not null,
    ref: > aci_data.id
  ]
  contact_first_name NVARCHAR(31)
  contact_last_name NVARCHAR(31)
  contact_email NVARCHAR(127)
  contact_phone_id INTEGER [
    not null,
    ref: > phone.id
  ]
  is_carrier BIT [not null, default: 0]
  is_local BIT [not null, default: 0]
  is_international BIT [not null, default: 0]
  default_wait_time INTEGER
  is_active BIT [not null, default: 1]
}

Table location_change_history {
  id INTEGER [pk, not null, increment]
  location_id INTEGER [
    not null,
    ref: > location.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table location_default_assessorial {
  id INTEGER [pk, not null, increment]
  location_id INTEGER [
    not null,
    ref: > location.id
  ]
  assessorial_id INTEGER [
    not null,
    ref: > assessorial.id
  ]
}

Table overnight_maintenance_history {
  id INTEGER [pk, not null, increment]
  date_overnight_maintenance DATETIME2
  user_id INTEGER [
    default: 0,
    ref: > user.id
  ]
  open_orders_in INTEGER [default: 0]
  open_order_assessorials_in INTEGER [default: 0]
  open_order_dimensions_in INTEGER [default: 0]
  open_order_drivers_in INTEGER [default: 0]
  open_order_attachments_in INTEGER [default: 0]
  invoiced_orders_in INTEGER [default: 0]
  invoiced_order_assessorials_in INTEGER [default: 0]
  invoiced_order_dimensions_in INTEGER [default: 0]
  invoiced_order_drivers_in INTEGER [default: 0]
  invoiced_order_attachments_in INTEGER [default: 0]
  remaining_orders_in INTEGER [default: 0]
  remaining_order_assessorials_in INTEGER [default: 0]
  remaining_order_dimensions_in INTEGER [default: 0]
  remaining_order_drivers_in INTEGER [default: 0]
  remaining_order_attachments_in INTEGER [default: 0]
  open_orders_out INTEGER [default: 0]
  open_order_assessorials_out INTEGER [default: 0]
  open_order_dimensions_out INTEGER [default: 0]
  open_order_drivers_out INTEGER [default: 0]
  open_order_attachments_out INTEGER [default: 0]
  invoiced_orders_out INTEGER [default: 0]
  invoiced_order_assessorials_out INTEGER [default: 0]
  invoiced_order_dimensions_out INTEGER [default: 0]
  invoiced_order_drivers_out INTEGER [default: 0]
  invoiced_order_attachments_out INTEGER [default: 0]
  remaining_orders_out INTEGER [default: 0]
  remaining_order_assessorials_out INTEGER [default: 0]
  remaining_order_dimensions_out INTEGER [default: 0]
  remaining_order_drivers_out INTEGER [default: 0]
  remaining_order_attachments_out INTEGER [default: 0]
}

Table order {
  id INTEGER [pk, not null, increment]
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
  order_type_id INTEGER [
    not null,
    ref: > order_type.id
  ]
  customer_id INTEGER [
    not null,
    ref: > customer.id
  ]
  agent_id INTEGER [ref: > agent.id]
  rate_id INTEGER [
    not null,
    ref: > rate.id
  ]
  hawb NVARCHAR(31)
  mawb NVARCHAR(31)
  order_notes NTEXT
  pu_time_start DATETIME2 [not null]
  pu_time_end DATETIME2 [not null]
  del_time_start DATETIME2 [not null]
  del_time_end DATETIME2 [not null]
  pu_location_id INTEGER [
    ref: > location.id
  ]
  pu_contact_phone_id INTEGER [
    ref: > phone.id  
  ]
  pu_contact_name NVARCHAR(63)
  pu_notes NTEXT
  del_location_id INTEGER [
    ref: > location.id
  ]
  del_contact_phone_id INTEGER [
    ref: > phone.id  
  ]
  del_contact_name NVARCHAR(63)
  del_notes NTEXT
  driver_name NVARCHAR()
  pod_signee NVARCHAR(63)
  pod_time_signed DATETIME2
  pod_notes NTEXT
  status_id INTEGER [
    not null,
    ref: > order_status.id  
  ]
  rating_weight_charges MONEY
  rating_fuel_charges MONEY 
  rating_service_charges MONEY
  rating_total_charges MONEY
  rating_total_expenses MONEY
  rating_storage_charges MONEY
  rating_adjustments MONEY
  rating_notes NTEXT
  quickbooks_customer_list_id NVARCHAR(50)
  quickbooks_customer_name NVARCHAR(50)
  quickbooks_invoice_reference_number NVARCHAR(50)
  quickbooks_line_sequence_number NVARCHAR(50)
  is_auto_assessorials BIT
  is_weight_charge_calculated BIT
}


Table order_change_history {
  id INTEGER [pk, not null, increment]
  order_id INTEGER [
    not null,
    ref: > order.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table order_assessorial {
  id INTEGER [pk, not null, increment]
  order_id INTEGER [
    not null,
    ref: > order.id
  ]
  assessorial_id INTEGER [
    not null,
    ref: > assessorial.id
  ]
  parent_type NVARCHAR(15) [NOT NULL]
  basis_count DECIMAL(6,2)
  total_charge MONEY
}

Table order_attachment {
  id INTEGER [pk, not null, increment]
  order_id INTEGER [
    not null,
    ref: > order.id
  ]
  attachment_path NVARCHAR(MAX)
  file_size DECIMAL(30,15)
}

Table order_dim {
  id INTEGER [pk, not null, increment]
  order_id INTEGER [
    not null,
    ref: > order.id
  ]
  unit_type NVARCHAR(15)
  unit_quantity INTEGER
  unit_weight INTEGER
  dim_height INTEGER
  dim_width INTEGER
  dim_length INTEGER
  dim_weight DECIMAL(20, 10)
}

Table order_driver {
  id INTEGER [pk, not null, increment]
  order_id INTEGER [
    not null,
    ref: > order.id
  ]
  driver_user_id INTEGER [
    ref: > user.id
  ]
  order_leg NVARCHAR(1)
  driver_role NVARCHAR(1)
}

Table order_status {
  id INTEGER [pk, not null, increment]
  order_status_name NVARCHAR(25) [not null]
  is_on_manifest BIT [not null]
  is_set_to_auto_notify BIT [not null]
  is_active BIT [not null]
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
}

Table order_status_change_history {
  id INTEGER [pk, not null, increment]
  order_status_id INTEGER [
    not null,
    ref: > order_status.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table order_type {
  id INTEGER [pk, not null, increment]
  order_type_name NVARCHAR(31) [not null]
}


Table phone {
  id INTEGER [pk, not null, increment]
  country_code NVARCHAR(3) [not null]
  area_code NVARCHAR(5) [not null]
  phone_number NVARCHAR(14) [not null]
  phone_extension NVARCHAR(4)
}

Table position {
  id INTEGER [pk, not null, increment]
  position_name NVARCHAR(25) [not null]
  security_level INTEGER [not null]
  is_active BIT [not null]
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
}

Table position_change_history {
  id INTEGER [pk, not null, increment]
  position_id INTEGER [
    not null,
    ref: > position.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table postal_code {
  id INTEGER [pk, not null, increment]
  postal_code NVARCHAR(15) [not null]
}

Table postal_code_region {
  id INTEGER [pk, not null, increment]
  postal_code_id INTEGER [
    not null,
    ref: > postal_code.id
  ]
  region_id INTEGER [
    not null,
    ref: > region.id
  ]
}

Table rate {
    id INTEGER [pk, not null, increment]
    rate_name NVARCHAR(31) [not null]
    branch_id INTEGER [
      not null,
      ref: > branch.id
    ]
    is_default BIT [not null, default: 0]
    is_active BIT [not null, default: 1]
    date_added DATETIME2
    added_by_user_id INTEGER [ref: > user.id]
}

Table rate_area {
  id INTEGER [pk, not null, increment]
  rate_id INTEGER [
    not null,
    ref: > rate.id  
  ]
  area NVARCHAR(1) [not null]
  rate_min MONEY
  rate_100 MONEY
  rate_1000 MONEY
  rate_2000 MONEY
  rate_5000 MONEY
  rate_max MONEY
}

Table rate_change_history {
  id INTEGER [pk, not null, increment]
  rate_id INTEGER [
    not null,
    ref: > rate.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table region {
  id INTEGER [pk, not null, increment]
  country_id INTEGER [
    not null,
    ref: > country.id
  ]
  iso_code CHAR [not null]
  region_name NVARCHAR(63) [not null]
}

Table special {
  id INTEGER [pk, not null, increment]
  old_id INTEGER
  branch_id INTEGER [
    not null,
    ref: > branch.id
  ]
  weekday INTEGER [not null]
  start_time TIME [not null]
  end_time TIME [not null]
  area NVARCHAR(1) [not null]
  is_active BIT [not null, default: 1]
}

Table special_change_history {
  id INTEGER [pk, not null, increment]
  special_id INTEGER [
    not null,
    ref: > special.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table user {
  id INTEGER [pk, not null, increment]
  username NVARCHAR(63) [unique, not null]
  email NVARCHAR(255) [unique, not null]
  password_hash NVARCHAR(255) [not null]
  password_salt NVARCHAR(32) [not null]
  name_prefix NVARCHAR(6)
  first_name NVARCHAR(31) [not null]
  last_name NVARCHAR(31) [not null]
  name_suffix NVARCHAR(6)
  address_id INTEGER [
    not null,
    ref: > address.id
  ]
  branch_id INTEGER [
    not null,
    ref: > branch.id  
  ]
  commission_rate MONEY [not null]
  date_hired DATETIME2
  date_terminated DATETIME2
  phone_main_id INTEGER [not null, ref: > phone.id]
  phone_home_id INTEGER [ref: > phone.id]
  phone_mobile_id INTEGER [ref: > phone.id]
  position_id INTEGER [
    not null,
    ref: > position.id
  ]
  tsa_number NVARCHAR(10)
  tsa_type NVARCHAR(10)
  tsa_taken NVARCHAR(31)
  is_active BIT [not null]
  is_default_doc_owner BIT [not null]
  is_security_coordinator BIT [not null]
  is_tsa_trainer BIT [not null]
}

Table user_change_history {
  id INTEGER [pk, not null, increment]
  user_changed_id INTEGER [
    not null,
    ref: > user.id
  ]
  user_id INTEGER [
    not null,
    ref: > user.id
  ]
  date_changed DATETIME2 [not null]
  changes NTEXT [not null]
}

Table valid_certification_test_type {
  id INTEGER [pk, not null, increment]
  test_title NVARCHAR(63) [not null]
  is_form_only BIT [not null]
  is_active BIT [not null, default: 0]
}